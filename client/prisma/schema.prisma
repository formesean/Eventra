// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  email        String         @unique
  name         String?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  Event        Event[]
  Registration Registration[]
}

model Registration {
  id            Int      @id @default(autoincrement())
  userId        Int
  eventId       Int
  fullName      String
  email         String
  contactNumber String?
  status        String   @default("going") // going, maybe, not going
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  user  User  @relation(fields: [userId], references: [id])
  event Event @relation(fields: [eventId], references: [id])

  @@unique([eventId, email])
}

model Event {
  id               Int            @id @default(autoincrement())
  userId           Int
  name             String
  description      String?
  startDate        DateTime
  endDate          DateTime
  startTime        String
  endTime          String
  timezone         String?
  location         String?
  organizer        String
  attendees        Int            @default(0)
  goingCount       Int            @default(0)
  maybeCount       Int            @default(0)
  notGoingCount    Int            @default(0)
  hasTickets       Boolean        @default(false)
  requiresApproval Boolean        @default(false)
  hasCapacity      Boolean        @default(false)
  isFree           Boolean        @default(true)
  capacity         String?
  bannerUrl        String?
  registrations    Registration[]

  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
